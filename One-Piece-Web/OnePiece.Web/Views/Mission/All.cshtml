@model AllMissionsQueryModel

@{
    ViewBag.Title = "All Missions";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="MissionType"></label>
                <select asp-for="MissionType" class="form-control">
                    <option value="">All</option>
                    @foreach (var missionType in Model.MissionTypes)
                    {
                        <option value="@missionType">@missionType</option>
                    }
                </select>
            </div>
             <div class="form-group">
                <label asp-for="MissionsPerPage"></label>
                <select asp-for="MissionsPerPage" class="form-control">
                    <option value="0">3</option>
                    <option value="1">6</option>
                    <option value="2">9</option>
                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="MissionSorting"></label>
                <select asp-for="MissionSorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Threat Level Ascending</option>
                    <option value="3">Threat Level Descending</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = Math.Ceiling((double)Model.TotalMissionsCount /
    Model.MissionsPerPage);
}
<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :
string.Empty)"
           asp-controller="Mission"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.MissionType"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.MissionSorting)"><<</a>
    </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Missions.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Mission"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.MissionType"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.MissionSorting)">>></a>
    </div>
</div>
@if (!Model.Missions.Any())
{
    <h2 class="text-center">No houses found by the given criteria!</h2>
}
<div class="row">
    @foreach (var mission in Model.Missions)
    {
        <partial name="_MissionPartial" model="@mission" />
    }
</div>